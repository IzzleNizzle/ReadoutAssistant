{"version":3,"sources":["images/cloud-download.svg","images/loading.gif","images/loading2.gif","images/check.svg","images/alert.svg","utils/API.js","utils/ManipulateAPIData.js","utils/Dates.js","components/DownloadReports/DownloadReports.js","components/DataCard/DataCard.js","components/DataGatherer/DataGatherer.js","components/PullMultiple/PullMultiple.js","index.js"],"names":["module","exports","__webpack_require__","p","CancelToken","axios","links","API","getGmv","inputObject","cancelApiRequest","source","data","URLSearchParams","append","oracle","userID","cancelToken","post","headers","Content-Type","token","getActiveListings","getConversion","getDashboard","getPhotoCount","getReturns","from","to","getSoldItem","getGroDataMobile","url","concat","firstDayFirstMonthLastYear","yesterday","method","getGroDataSite","storeGroData","groType","dataPayload","fakeApiCall","Promise","res","setTimeout","ManipulateAPIData","formatDecimals","num","cleanGroApiData","dataObject","regExp","RegExp","newDataObject","key","split","filter","x","i","length","this","splice","formatArray","loopLength","push","jsonArray","formatGroResponseToCsv","csvString","gmv","list","imp","vi","purchase","Dates","yyyymmdd","yearOffset","dayOffset","d","Date","mm","getMonth","dd","getDate","getFullYear","join","yyyymmddCustom","month","day","year","firstDay","calcDate","lastDay","ins3","todaysDate","yesterdaysDate","previousMonthLastDay","previousYearToday","previousYear","get12MonthEvalDates","currentMonth","monthToStartFrom","monthToEndAt","evalFirstDay","evalLastDay","get3MonthEvalDates","getEvalDates","threeMonthCount","_getEval","DownloadReports","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","downloadReports","link","document","createElement","style","display","getElementById","appendChild","setAttribute","fileName","click","removeChild","state","react_default","a","id","className","disabled","hidden","onClick","src","download","alt","Component","DataCard","progressRender","prog","loading","check","alert","_this2","uniqueId","index","title","hideDownloadButton","loading2","components_DownloadReports_DownloadReports","dataSources","type","data-toggle","data-target","aria-expanded","aria-controls","map","name","progress","DataGatherer","realAPICall","asyncToGenerator","regenerator_default","mark","_callee","userInput","dashboard","mobileApiCall","siteApiCall","active","conversion","photo","returns","sold","wrap","_context","prev","next","incrementProgress","addCancelToken","then","addLinkToLinksArray","conData","parseFloat","content1","_Dates$getEvalDates","setState","catch","err","isCancel","console","log","message","all","cleanMobileData","cleanSiteData","csvMobileData","csvSiteData","siteParams","mobileParams","mobile","site","toggleHideDownloadButton","trigger","stop","fakeAPICall","_callee2","_context2","_Dates$getEvalDates2","prevState","newState","objectSpread","fullLink","stateUpdate","datasources","arr","toConsumableArray","cancelTokens","fireAllCancels","forEach","cancel","shouldRender","String","components_DataCard_DataCard","orace","PullMultiple","initiateGenerator","myGener","myGen","handleInputChange","event","_this$setState","_event$target","target","value","unprocessedOracles","splitOracles","defineProperty","val","startCycle","rawOracles","toggleInputDisabled","triggerGenerator","unpro","pro","t0","keys","t1","done","processedOracles","disabledInput","clearComponentData","rows","onChange","components_DataGatherer_DataGatherer","ReactDOM","render","components_PullMultiple_PullMultiple"],"mappings":"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","file":"static/js/main.24d8db4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cloud-download.ebd06da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.584b607f.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading2.25ef2804.gif\";","module.exports = __webpack_public_path__ + \"static/media/check.1899110c.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert.50a03322.svg\";","import axios from \"axios\";\nconst CancelToken = axios.CancelToken;\n\nlet links = {\n  gmv: \"http://intentionally_removed/customGMV_v2.php\"\n  , activeListings: \"http://intentionally_removed/customActiveListings.php\"\n  , returns: \"http://intentionally_removed/customReturnsOverview.php\"\n  , conversion: \"http://intentionally_removed/customConversion.php\"\n  , soldItem: \"http://intentionally_removed/customSoldItems.php\"\n  , photoCount: \"http://intentionally_removed/customPhoto.php\"\n  , dashboard: \"http://intentionally_removed/customSellerDashboard.php\"\n  , testData: \"http://intentionally_removed/testData.csv\"\n  , reports: \"http://intentionally_removed/reports/\"\n  ,\n  storeGroData: \"http://intentionally_removed/customGroHandler.php\"\n}\n\nexport default {\n  // Gets Gmv Data\n  getGmv: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    //Only needs one parameter\n    data.append('oracle', inputObject.oracle)\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.gmv,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets ActiveListings Data\n  getActiveListings: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    // Only needs one parameter\n    data.append('oracle', inputObject.oracle);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.activeListings,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets Conversion Data\n  getConversion: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    //Only needs one parameter\n    data.append('oracle', inputObject.oracle);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.conversion,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  getDashboard: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    // Only needs one parameter\n    data.append('oracle', inputObject.oracle);\n\n    // Cannot add userID parameter here as I don't have it until this call finishes\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.dashboard,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets PhotoCount Data\n  getPhotoCount: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    //Only needs one parameter\n    data.append('oracle', inputObject.oracle);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.photoCount,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets Returns Data\n  getReturns: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    // Needs three parameters\n    data.append('oracle', inputObject.oracle);\n    data.append('from', inputObject.from);\n    data.append('to', inputObject.to);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.returns,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets SoldItem Data\n  getSoldItem: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    // Needs three parameters\n    data.append('oracle', inputObject.oracle);\n    data.append('from', inputObject.from);\n    data.append('to', inputObject.to);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.soldItem,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  // Gets GroMobile Data\n  getGroDataMobile: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // Date inputs come in like this yyyy-mm-dd when url needs it yyyy/mm/dd. So a little RegEx can fix that\n    // inputObject.from = inputObject.from.replace(/-/g, \"/\");\n    // inputObject.to = inputObject.to.replace(/-/g, \"/\");\n\n    return {\n      cancelToken: source,\n      axios: axios({\n        url: `http://intentionally_removed/${inputObject.oracle}/list_srch_vi_purchase_gmb.json?start=${inputObject.firstDayFirstMonthLastYear}&end=${inputObject.yesterday}&exp=mobile&vrtcl=%2Cb%26i%2Ccollectibles%2Celectronics%2Cfashion%2Chome%26garden%2Clifestyle%2Cmedia%2Cp%26a%2Cunknown`,\n        method: 'get',\n        cancelToken: source.token\n      })\n    }\n\n  },\n  // Gets GroSite Data\n  getGroDataSite: function (inputObject) {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // Date inputs come in like this yyyy-mm-dd when url needs it yyyy/mm/dd. So a little RegEx can fix that\n    // inputObject.from = inputObject.from.replace(/-/g, \"/\");\n    // inputObject.to = inputObject.to.replace(/-/g, \"/\");\n\n    return {\n      cancelToken: source,\n      axios: axios({\n        url: `http://intentionally_removed/${inputObject.oracle}/list_srch_vi_purchase_gmb.json?start=${inputObject.firstDayFirstMonthLastYear}&end=${inputObject.yesterday}&exp=site&vrtcl=%2Cb%26i%2Ccollectibles%2Celectronics%2Cfashion%2Chome%26garden%2Clifestyle%2Cmedia%2Cp%26a%2Cunknown`,\n        method: 'get',\n        cancelToken: source.token\n      })\n    }\n\n  },\n  storeGroData: inputObject => {\n\n    // If user has cancelled request, perform no further API calls\n    if (inputObject.cancelApiRequest) {\n      return null\n    }\n\n    // Config cancel token\n    const source = CancelToken.source();\n\n    // URL Parsing Paramaters, as per servers needs...\n    const data = new URLSearchParams();\n\n    // Needs three parameters\n    data.append('oracle', inputObject.oracle);\n    data.append('groType', inputObject.groType);\n    data.append('dataPayload', inputObject.dataPayload);\n\n    // Adding userID parameter for file naming clarity\n    data.append('userID', inputObject.userID)\n\n    // Axios Post to Server, configured\n    return {\n      cancelToken: source,\n      axios: axios.post(\n        // url\n        links.storeGroData,\n        // data\n        data,\n        // config\n        {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          cancelToken: source.token\n        })\n    }\n\n  },\n  fakeApiCall: () => {\n\n    // Config fake cancel token\n    const source = CancelToken.source();\n\n    return {\n      cancelToken: source,\n      axios: new Promise(res => {\n        setTimeout(() => {\n          res(\"Fake API data received\")\n        }, 2700)\n      })\n    }\n  }\n};\n","\nexport default {\n  // This will help with some data formatting\n  formatDecimals: num => {\n    return num / 100;\n  },\n  // Function for cleaning GRO API data\n  cleanGroApiData: function (dataObject) {\n    // Regular Expression to split data at ,'s and newlines\n    let regExp = new RegExp(\"[,\\\\n]\", \"g\")\n    // Variable for saving new object\n    let newDataObject = {};\n    // Looping through each key in api data object\n    for (var key in dataObject) {\n      newDataObject[key] = dataObject[key]\n        // Splitting data at ,'s and newlines\n        .split(regExp)\n        // This filter will remove any empty strings. Data responds with 0 if no data, so this is good. Sometimes Split will return empty '' value and this filter will remove those as they are considered falsy\n        .filter(x => x);\n      // GMV Field needs extra formatting. Data comes from api like this \"25598\", but if downloaded into csv it would be \"255.98\"\n      // Look for GMV key\n      if (key === \"gmv\") {\n        // Loop through every variable in GMV array\n        for (let i = 0; i < newDataObject[key].length; i++) {\n          // Format number if over 99, needs to be formatted with a decimal\n          if (newDataObject[key][i] > 99) {\n            newDataObject[key][i] = this.formatDecimals(newDataObject[key][i]);\n          }\n        }\n      }\n      // Remove first two elements in array as they are always just headers and not data\n      newDataObject[key].splice(0, 2);\n      // Format Data so that it goes into spreadsheet nicely\n      // This means each new row of data will be inside of it's own array\n      // I will go through each array and split it up into arrays\n      let formatArray = [];\n      // If i don't set length first, splicing array will change length\n      let loopLength = newDataObject[key].length;\n      for (let i = 0; i < loopLength; i += 2) {\n        formatArray.push(newDataObject[key].splice(0, 2));\n      }\n      // Setting Object Key to Properly Formatted Array\n      newDataObject[key] = formatArray;\n    }\n\n    // To properly format for JSON, object needs to be inside an array\n    let jsonArray = [];\n    // Add data to array\n    jsonArray.push(newDataObject);\n    // Return array\n    return jsonArray;\n  },\n  formatGroResponseToCsv: data => {\n    // Return String that mimics a .csv file\n    // String starts with headers\n    let csvString = 'Day,Listings,Impressions,ViewItems,SoldItems,GMV\\n';\n    // for loop length of data array\n    for (let i = 0; i < data.gmv.length; i++) {\n      // Each loop, concat in order data\n      // Seperate each data poitn with coma\n      // Day\n      csvString = csvString.concat(`${data.gmv[i][0]},`);\n      // Listings\n      csvString = csvString.concat(`${data.list[i][1]},`);\n      // Impressions\n      csvString = csvString.concat(`${data.imp[i][1]},`);\n      // ViewItems\n      csvString = csvString.concat(`${data.vi[i][1]},`);\n      // SoldItems\n      csvString = csvString.concat(`${data.purchase[i][1]},`);\n      // GMV\n      csvString = csvString.concat(`${data.gmv[i][1]}`);\n      // End each loop with new line character\n      csvString = csvString.concat(\"\\n\");\n    }\n    return csvString;\n  }\n}\n","// Some helper functions for processing dates.\n\nexport default {\n  // Known weakness in the yyymmdd(). Do not let this calculate into the previous month as days will not be calculated correctly. You can get day 00 which is incorrect.\n  yyyymmdd: (yearOffset, dayOffset) => {\n    let d = new Date();\n    let mm = d.getMonth() + 1; // getMonth() is zero-based\n    let dd = d.getDate() - dayOffset;\n\n    return [d.getFullYear() - yearOffset,\n    (mm > 9 ? '' : '0') + mm,\n    (dd > 9 ? '' : '0') + dd\n    ].join('/');\n  },\n  // Similar to yyyymmdd, however you can give any input for month, day, year\n  yyyymmddCustom: (month, day, year) => {\n    return [year,\n      (month > 9 ? '' : '0') + month,\n      (day > 9 ? '' : '0') + day\n    ].join('/');\n  },\n  firstDay: function (month) {\n    // Initializes date variable\n    let d = new Date();\n    // Gets this year\n    let year = d.getFullYear();\n    // Formates date variable. Will handle negative months, will go back months. Handles going back to a previous year also\n    let calcDate = new Date(year, month, 1);\n    // Formats into pretty string; ex. \"2017/09/01\"\n    return this.yyyymmddCustom(calcDate.getMonth() + 1, calcDate.getDate(), calcDate.getFullYear());\n  },\n  lastDay: function (month) {\n    // Initializes date variable\n    let d = new Date();\n    // Gets this year\n    let year = d.getFullYear();\n    // Formates date variable. Will handle negative months, will go back months. Handles going back to a previous year also\n    let ins3 = new Date(year, month + 1, 0);\n    // Formats into pretty string; ex. \"2017/09/30\"\n    return this.yyyymmddCustom(ins3.getMonth() + 1, ins3.getDate(), ins3.getFullYear());\n  },\n  todaysDate: function () {\n    return this.yyyymmdd(0, 0);\n  },\n  yesterdaysDate: function () {\n    // Need to catch and handle differently 'first days of the month', as this naturally will produce a 00 day date, which will cause error. ie 2019/02/00\n    \n    return this.yyyymmdd(0, 1);\n  },\n  previousMonthLastDay: function () {\n    let nowDate = new Date()\n    // Get month of now\n    let month = nowDate.getMonth()\n    // subtract one\n    month --\n    // send to this.lastDay()\n    return this.lastDay(month)\n  },\n  previousYearToday: function () {\n    return this.yyyymmdd(1, 0);\n  },\n  firstDayFirstMonthLastYear: function () {\n    return this.yyyymmddCustom(1, 1, this.previousYear());\n  },\n  previousYear: function () {\n    return new Date().getFullYear() - 1;\n  },\n  /* \nfunction get12MonthEvalDates\n@param todaysDate - Simple Number\n@param currentMonth - Simple Number\n\n@return {\n\tevalFirstDay, // String - Ex. \"2017/09/01\"\n\tevalLastDay // String - Ex. \"2017/11/30\"\n}\n\n*/\n  get12MonthEvalDates: function get12MonthEvalDates(todaysDate, currentMonth) {\n    // Setting Variables\n    let monthToStartFrom;\n    let monthToEndAt;\n    // For Readability\n    let oneMonth = 1;\n    let twoMonths = 2;\n    let twelveMonths = 12;\n    let thirteenMonths = 13;\n    // Account for computer seeing month on a 0 basis. Ex January is month 0, not month 1\n    currentMonth--;\n\n    // Logic\n    if (todaysDate > 5 && todaysDate < 20) {\n\n      // Look at forecasted evaluation\n      // First Month\n      monthToStartFrom = currentMonth - twelveMonths;\n      // Last Month\n      monthToEndAt = currentMonth - oneMonth;\n\n    }\n    else {\n\n      // Look at Current Seller Level\n      // First Month\n      monthToStartFrom = currentMonth - thirteenMonths;\n      // Last Month\n      monthToEndAt = currentMonth - twoMonths;\n\n    }\n\n    // This will Handle when months goes into the previous year\n    // Give me formatted date of monthToStartFrom.firstDay and monthToEndAt.LastDay\n    let monthToStartFromFirstDay = this.firstDay(monthToStartFrom);\n    let monthToEndAtLastDay = this.lastDay(monthToEndAt);\n\n    return {\n      evalFirstDay: monthToStartFromFirstDay,\n      evalLastDay: monthToEndAtLastDay\n    }\n  },\n  /* \n  function get3MonthEvalDates\n  @param todaysDate - Simple Number\n  @param currentMonth - Simple Number\n  \n  @return {\n    evalFirstDay, // String - Ex. \"2017/09/01\"\n    evalLastDay // String - Ex. \"2017/11/30\"\n  }\n  \n  */\n  get3MonthEvalDates: function get3MonthEvalDates(todaysDate, currentMonth) {\n    // Setting Variables\n    let monthToStartFrom;\n    let monthToEndAt;\n    // For Readability\n    let oneMonth = 1;\n    let twoMonths = 2;\n    let threeMonths = 3;\n    let fourMonths = 4;\n    // Account for computer seeing month on a 0 basis. Ex January is month 0, not month 1\n    currentMonth--;\n\n    // Logic\n    if (todaysDate > 5 && todaysDate < 20) {\n\n      // Look at forecasted evaluation\n      // First Month\n      monthToStartFrom = currentMonth - threeMonths;\n      // Last Month\n      monthToEndAt = currentMonth - oneMonth;\n\n    }\n    else {\n\n      // Look at Current Seller Level\n      // First Month\n      monthToStartFrom = currentMonth - fourMonths;\n      // Last Month\n      monthToEndAt = currentMonth - twoMonths;\n\n    }\n\n    // This will Handle when months goes into the previous year\n    // Give me formatted date of monthToStartFrom.firstDay and monthToEndAt.LastDay\n    let monthToStartFromFirstDay = this.firstDay(monthToStartFrom);\n    let monthToEndAtLastDay = this.lastDay(monthToEndAt)\n\n    return {\n      evalFirstDay: monthToStartFromFirstDay,\n      evalLastDay: monthToEndAtLastDay\n    }\n  },\n  getEvalDates: function (threeMonthCount) {\n    // Get todays date and month\n    let d = new Date();\n    let mm = d.getMonth() + 1; // getMonth() is zero-based\n    let dd = d.getDate();\n\n    // Variable for holding response object\n    let getEval;\n    // Logic\n    if (threeMonthCount >= 400) {\n      // Do a 3 month lookback\n      getEval = this.get3MonthEvalDates(dd, mm);\n    }\n    else {\n      // Do a 12 month lookback\n      getEval = this.get12MonthEvalDates(dd, mm);\n    }\n    // Destructuring the response object\n    let { evalFirstDay, evalLastDay } = getEval;\n    // Returning the important data\n    return {\n        threeMonthCount: threeMonthCount,\n        from: evalFirstDay,\n        to: evalLastDay\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport download from \"../../images/cloud-download.svg\";\n\n\nclass DownloadReports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  downloadReports = () => {\n\n    let link = document.createElement('a');\n\n    link.style.display = 'none';\n\n    document.getElementById(\"downloadReports\").appendChild(link);\n\n    for (var i = 0; i < this.props.links.length; i++) {\n      // This array is already filled out with null values, if no data report is available link will be null \n      if (this.props.links[i].link === null) {\n        // If link is null, do nothing\n      }\n      else {\n        // Otherwise do the necessary to send download link`\n        link.setAttribute('href', this.props.links[i].link);\n        link.setAttribute('download', this.props.links[i].fileName);\n\n        link.click();\n\n      }\n    }\n\n    document.getElementById(\"downloadReports\").removeChild(link);\n  }\n\n  render() {\n    return (\n      <span id='downloadReports'>\n        <button\n          className={`btn btn-warning btn-sm`}\n          disabled={this.props.hidden}\n          onClick={this.downloadReports}\n        >\n          <img src={download} alt=\"download\"/> Download Reports\n      </button>\n      </span>\n    );\n\n  }\n}\n\nexport default DownloadReports;","import React, { Component } from 'react';\nimport DownloadReports from \"../DownloadReports\";\nimport loading from \"../../images/loading.gif\";\nimport loading2 from \"../../images/loading2.gif\";\nimport check from \"../../images/check.svg\";\nimport alert from \"../../images/alert.svg\";\n\n\nclass DataCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  // This function is used to choose what ot display in table depending on progress of data call\n  progressRender = prog => {\n    switch (prog) {\n      case 0:\n        return <div>\n          Paused\n            </div>\n      case 1:\n        return <div>\n          Loading.. <img src={loading} alt=\"loading\" />\n            </div>\n      case 2:\n        return <div>\n          <img src={check} alt=\"check\" /> Loaded!\n            </div>\n      default:\n        return <div>\n          <img src={alert} alt=\"error\" /> Error\n            </div>\n    }\n  }\n\n  render() {\n    let uniqueId = `${this.props.userID}_${this.props.index}`\n\n    return (\n      <div className=\"col-md-4\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              {this.props.userID ? this.props.userID : this.props.title}\n            </h5>\n\n            {this.props.hideDownloadButton ? (<h6 className=\"card-subtitle mb-2 text-muted\">Loading.. <img src={loading2} alt=\"loading\" />\n            </h6>) : <h6 className=\"card-subtitle mb-2 text-muted\">Done!</h6>}\n\n\n            <p className=\"card-text\">\n              <DownloadReports\n                links={this.props.dataSources}\n                hidden={this.props.hideDownloadButton}\n                oracle={this.props.oracle}\n              />\n\n              <button\n                className=\"btn btn-primary btn-sm\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target={`#${uniqueId}`}\n                aria-expanded=\"false\"\n                aria-controls=\"collapseExample\">\n                Details\n              </button>\n            </p>\n\n            {/* This is the section for listing all the seperate api calls and their progresses */}\n            <div\n              className=\"collapse\"\n              id={uniqueId}\n            >\n              {this.props.dataSources.map((source, i) => {\n                return <div\n                  className='row'\n                  key={i}\n                >\n                  <div className='col-md-6'>\n                    {source.name}\n                  </div>\n                  <div className='col-md-6'>\n                    {this.progressRender(source.progress)}\n                  </div>\n                </div>\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default DataCard;","import React, { Component } from 'react'\nimport axios from \"axios\"\nimport API from \"../../utils/API\";\nimport ManipulateAPIData from \"../../utils/ManipulateAPIData\";\nimport Dates from \"../../utils/Dates\";\nimport DataCard from \"../DataCard\";\n\nclass DataGatherer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSources: [\n        {\n          name: \"Dashboard\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"GroMobile\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"GroSite\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"GMV\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"ActiveListings\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"Conversion\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"PhotoCount\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"Returns\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n        {\n          name: \"SoldItem\",\n          progress: 0,\n          shouldRender: false,\n          data: '',\n          link: null,\n          fileName: String()\n        },\n      ],\n      hideDownloadButton: true,\n      userID: '',\n      cancelTokens: []\n    }\n  }\n\n\n  componentDidMount() {\n\n    // Call for main function\n    this.fakeAPICall()\n\n  }\n\n\n  componentWillUnmount() {\n\n    // Cancel all active API calls\n    this.fireAllCancels()\n\n  }\n\n\n  // This is the main function that goes and gets all of the data\n  realAPICall = async () => {\n    /* *** GAMEPLAN ***\n  \n    Perform all API calls. \n    \n    Data needed for each API call:\n\n    DASHBOARD API - Only Oracle Needed\n    GMV API - Only Oracle Needed\n    Active API - Only Oracle Needed\n    Photos API - Only Oracle Needed\n    Conversion API - Only Oracle Needed\n  \n    \n    Returns API - NEEDS Previous or Trending dashboard\n    Sold API - NEEDS Previous or Trending dashboard\n  \n\n    GRO Mobile - NEEDS First Day of Previous Year To Yesterday\n    GRO Site - NEEDS First Day of Previous Year To Yesterday\n    \n    */\n\n    // If an API call fails, i still want data to be pulled.\n    // However, if a user cancels I want all subsequent api calls to stop\n    // if a user cancels an api call all subsequent calls will still be made. This variable will be passed to all local api calls to trigger if user has cancelled\n    let cancelApiRequest = false;\n\n\n    // On the first day of the month yesterdaysDate() will produce a 00 day date, ie 2019/02/00. The api will throw an error with this.\n    // Will need to use last day of previous month if it is the 'first day of the month'\n\n    let yesterday\n\n    if (new Date().getDate() === 1) {\n      yesterday = Dates.previousMonthLastDay()\n    }\n    else {\n      yesterday = Dates.yesterdaysDate()\n    }\n\n    // Prepping needed data for API calls\n    let userInput = {\n      oracle: this.props.oracle,\n      // Getting first day last year\n      firstDayFirstMonthLastYear: Dates.firstDayFirstMonthLastYear(),\n      yesterday,\n      cancelApiRequest\n    };\n\n    // Beginning API call process\n\n\n    // Updating Progress for Dashboard data\n    this.incrementProgress(0);\n\n    let dashboard = API.getDashboard(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(dashboard.cancelToken)\n\n    // API Call\n    await dashboard.axios\n      .then(res => {\n        // This function is different because the response has been modified, this is the only function that uses data.conData, the rest use data.content1\n\n        // Adding download link to array\n        this.addLinkToLinksArray(res.data.conData, 0);\n\n        // Updating Progress for Dashboard data\n        this.incrementProgress(0);\n\n        // Calculate threeMonthCount\n        let threeMonthCount = parseFloat(res.data.content1[1][2]);\n\n        // Grab userID\n        let userID = res.data.content1[1][1];\n\n        // Getting Eval Dates\n        let { to, from } = Dates.getEvalDates(threeMonthCount);\n\n        // Updating User Input with the evaluation dates for the to and from, also including user ID\n        userInput.to = to;\n        userInput.from = from;\n        userInput.userID = userID;\n\n        // Setting State with Dashboard API Response's\n        this.setState({\n          threeMonthCount: threeMonthCount,\n          to,\n          from,\n          userID\n        });\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getDashboard\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(0);\n          this.incrementProgress(0);\n        }\n\n      });\n\n\n    // Saving Variables for GRO data\n    let mobileApiCall = API.getGroDataMobile(userInput);\n    let siteApiCall = API.getGroDataSite(userInput);\n\n    // Save cancel tokens\n    this.addCancelToken(mobileApiCall.cancelToken)\n    this.addCancelToken(siteApiCall.cancelToken)\n\n    // Updating Progress for Gro data\n    this.incrementProgress(1);\n    this.incrementProgress(2);\n\n    // Calling both GRO calls at once\n    Promise.all([mobileApiCall.axios, siteApiCall.axios])\n      .then(res => {\n\n        // Mobile Data\n        let cleanMobileData = ManipulateAPIData.cleanGroApiData(res[0].data);\n        // Site Data\n        let cleanSiteData = ManipulateAPIData.cleanGroApiData(res[1].data);\n        // Extra processing for Gro data for mimicked .csv file\n        let csvMobileData = ManipulateAPIData.formatGroResponseToCsv(cleanMobileData[0]);\n        let csvSiteData = ManipulateAPIData.formatGroResponseToCsv(cleanSiteData[0]);\n\n\n        // Sending Gro data to server to be stored in a .csv file\n\n        // Prepare variables\n        let siteParams = {\n          oracle: userInput.oracle,\n          groType: 'siteGRO',\n          dataPayload: csvSiteData,\n          userID: userInput.userID,\n          cancelApiRequest\n        }\n        let mobileParams = {\n          oracle: userInput.oracle,\n          groType: 'mobileGRO',\n          dataPayload: csvMobileData,\n          userID: userInput.userID,\n          cancelApiRequest\n        }\n\n        // Making API call to store data\n        let mobile = API.storeGroData(siteParams)\n\n        // Saving cancel token\n        this.addCancelToken(mobile.cancelToken)\n\n        mobile.axios\n          .then(res => {\n            // Store links from server for download button\n            this.addLinkToLinksArray(res.data.conData, 2)\n          })\n          .catch(err => {\n            console.log(err)\n            console.log('error saving GRO .csv file mobile')\n          })\n\n        let site = API.storeGroData(mobileParams)\n\n        // Saving cancel token\n        this.addCancelToken(site.cancelToken)\n\n        site.axios\n          .then(res => {\n            // Store links from server for download button\n            this.addLinkToLinksArray(res.data.conData, 1)\n          })\n          .catch(err => {\n            console.log(err)\n            console.log('error saving GRO .csv file mobile')\n          })\n\n        // Updating Progress for Gro data\n        this.incrementProgress(1);\n        this.incrementProgress(2);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"Promise.all\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(1);\n          this.incrementProgress(1);\n          this.incrementProgress(2);\n          this.incrementProgress(2);\n\n        }\n\n      });\n\n\n    // Updating Progress for GMV data\n    this.incrementProgress(3);\n\n    let gmv = API.getGmv(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(gmv.cancelToken)\n\n    gmv.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 3);\n        // Updating Progress for GMV data\n        this.incrementProgress(3);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getGmv\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(3);\n          this.incrementProgress(3);\n        }\n\n      });\n\n\n    // Updating Progress for Active Listings data\n    this.incrementProgress(4);\n\n    let active = API.getActiveListings(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(active.cancelToken)\n\n    await active.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 4);\n        // Updating Progress for Active Listings data\n        this.incrementProgress(4);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getActiveListings\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(4);\n          this.incrementProgress(4);\n\n        }\n\n      });\n\n\n    // Updating Progress for Conversion Listings data\n    this.incrementProgress(5);\n\n    let conversion = API.getConversion(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(conversion.cancelToken)\n\n    conversion.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 5);\n        // Updating Progress for Conversion Listings data\n        this.incrementProgress(5);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getConversion\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(5);\n          this.incrementProgress(5);\n        }\n\n      });\n\n\n    // Updating Progress for Photo Count Listings data\n    this.incrementProgress(6);\n\n    let photo = API.getPhotoCount(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(photo.cancelToken)\n\n    await photo.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 6);\n        // Updating Progress for Photo Count Listings data\n        this.incrementProgress(6);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getPhotoCount\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(6);\n          this.incrementProgress(6);\n        }\n\n      });\n\n\n    // Updating Progress for Returns data\n    this.incrementProgress(7);\n\n    let returns = API.getReturns(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(returns.cancelToken)\n\n    returns.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 7);\n        // Updating Progress for Returns data\n        this.incrementProgress(7);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getReturns\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(7);\n          this.incrementProgress(7);\n        }\n\n      });\n\n\n    // Updating Progress for Sold Items data\n    this.incrementProgress(8);\n\n    let sold = API.getSoldItem(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(sold.cancelToken)\n\n    await sold.axios\n      .then(res => {\n\n        // Calling to gather full data\n        this.addLinkToLinksArray(res.data.content1, 8);\n        // Updating Progress for Sold Items data\n        this.incrementProgress(8);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getSoldItem\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(8);\n          this.incrementProgress(8);\n        }\n\n      });\n\n    // Toggle Download Button as now we have all Reports to download\n    this.toggleHideDownloadButton();\n\n    // As the process has completed, trigger parent component that it has been finished\n    this.props.trigger()\n\n  }\n\n  // This is used simply for demo reasons\n  fakeAPICall = async () => {\n    \n    // If an API call fails, i still want data to be pulled.\n    // However, if a user cancels I want all subsequent api calls to stop\n    // if a user cancels an api call all subsequent calls will still be made. This variable will be passed to all local api calls to trigger if user has cancelled\n    let cancelApiRequest = false;\n\n\n    // On the first day of the month yesterdaysDate() will produce a 00 day date, ie 2019/02/00. The api will throw an error with this.\n    // Will need to use last day of previous month if it is the 'first day of the month'\n\n    let yesterday\n\n    if (new Date().getDate() === 1) {\n      yesterday = Dates.previousMonthLastDay()\n    }\n    else {\n      yesterday = Dates.yesterdaysDate()\n    }\n\n    // Prepping needed data for API calls\n    let userInput = {\n      oracle: this.props.oracle,\n      // Getting first day last year\n      firstDayFirstMonthLastYear: Dates.firstDayFirstMonthLastYear(),\n      yesterday,\n      cancelApiRequest\n    };\n\n    // Beginning API call process\n\n\n    // Updating Progress for Dashboard data\n    this.incrementProgress(0);\n\n    let dashboard = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(dashboard.cancelToken)\n\n    // API Call\n    await dashboard.axios\n      .then(res => {\n        // This function is different because the response has been modified, this is the only function that uses data.conData, the rest use data.content1\n\n        // Adding download link to array\n        // this.addLinkToLinksArray(res.data.conData, 0);\n\n        // Updating Progress for Dashboard data\n        this.incrementProgress(0);\n\n        // Calculate threeMonthCount\n        // let threeMonthCount = parseFloat(res.data.content1[1][2]);\n        let threeMonthCount = 450; // Demo data\n\n\n        // Grab userID\n        // let userID = res.data.content1[1][1];\n        let userID = this.props.title; // Demo Data\n        \n\n        // Getting Eval Dates\n        let { to, from } = Dates.getEvalDates(threeMonthCount);\n\n        // Updating User Input with the evaluation dates for the to and from, also including user ID\n        userInput.to = to;\n        userInput.from = from;\n        userInput.userID = userID;\n\n        // Setting State with Dashboard API Response's\n        this.setState({\n          threeMonthCount: threeMonthCount,\n          to,\n          from,\n          userID\n        });\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getDashboard\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(0);\n          this.incrementProgress(0);\n        }\n\n      });\n\n\n    // Saving Variables for GRO data\n    let mobileApiCall = API.fakeApiCall(userInput);\n    let siteApiCall = API.fakeApiCall(userInput);\n\n    // Save cancel tokens\n    this.addCancelToken(mobileApiCall.cancelToken)\n    this.addCancelToken(siteApiCall.cancelToken)\n\n    // Updating Progress for Gro data\n    this.incrementProgress(1);\n    this.incrementProgress(2);\n\n    // Calling both GRO calls at once\n    Promise.all([mobileApiCall.axios, siteApiCall.axios])\n      .then(res => {\n\n        // Mobile Data\n        // let cleanMobileData = ManipulateAPIData.cleanGroApiData(res[0].data);\n        // Site Data\n        // let cleanSiteData = ManipulateAPIData.cleanGroApiData(res[1].data);\n        // Extra processing for Gro data for mimicked .csv file\n        // let csvMobileData = ManipulateAPIData.formatGroResponseToCsv(cleanMobileData[0]);\n        // let csvSiteData = ManipulateAPIData.formatGroResponseToCsv(cleanSiteData[0]);\n\n\n        // Sending Gro data to server to be stored in a .csv file\n\n        // Prepare variables\n        // let siteParams = {\n        //   oracle: userInput.oracle,\n        //   groType: 'siteGRO',\n        //   dataPayload: csvSiteData,\n        //   userID: userInput.userID,\n        //   cancelApiRequest\n        // }\n        // let mobileParams = {\n        //   oracle: userInput.oracle,\n        //   groType: 'mobileGRO',\n        //   dataPayload: csvMobileData,\n        //   userID: userInput.userID,\n        //   cancelApiRequest\n        // }\n\n        // Making API call to store data\n        // let mobile = API.storeGroData(siteParams)\n\n        // Saving cancel token\n        // this.addCancelToken(mobile.cancelToken)\n\n        // mobile.axios\n        //   .then(res => {\n        //     // Store links from server for download button\n        //     this.addLinkToLinksArray(res.data.conData, 2)\n        //   })\n        //   .catch(err => {\n        //     console.log(err)\n        //     console.log('error saving GRO .csv file mobile')\n        //   })\n\n        // let site = API.storeGroData(mobileParams)\n\n        // // Saving cancel token\n        // this.addCancelToken(site.cancelToken)\n\n        // site.axios\n        //   .then(res => {\n        //     // Store links from server for download button\n        //     this.addLinkToLinksArray(res.data.conData, 1)\n        //   })\n        //   .catch(err => {\n        //     console.log(err)\n        //     console.log('error saving GRO .csv file mobile')\n        //   })\n\n        // Updating Progress for Gro data\n        this.incrementProgress(1);\n        this.incrementProgress(2);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"Promise.all\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(1);\n          this.incrementProgress(1);\n          this.incrementProgress(2);\n          this.incrementProgress(2);\n\n        }\n\n      });\n\n\n    // Updating Progress for GMV data\n    this.incrementProgress(3);\n\n    let gmv = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(gmv.cancelToken)\n\n    gmv.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 3);\n        // Updating Progress for GMV data\n        this.incrementProgress(3);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getGmv\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(3);\n          this.incrementProgress(3);\n        }\n\n      });\n\n\n    // Updating Progress for Active Listings data\n    this.incrementProgress(4);\n\n    let active = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(active.cancelToken)\n\n    await active.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 4);\n        // Updating Progress for Active Listings data\n        this.incrementProgress(4);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getActiveListings\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(4);\n          this.incrementProgress(4);\n\n        }\n\n      });\n\n\n    // Updating Progress for Conversion Listings data\n    this.incrementProgress(5);\n\n    let conversion = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(conversion.cancelToken)\n\n    conversion.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 5);\n        // Updating Progress for Conversion Listings data\n        this.incrementProgress(5);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getConversion\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(5);\n          this.incrementProgress(5);\n        }\n\n      });\n\n\n    // Updating Progress for Photo Count Listings data\n    this.incrementProgress(6);\n\n    let photo = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(photo.cancelToken)\n\n    await photo.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 6);\n        // Updating Progress for Photo Count Listings data\n        this.incrementProgress(6);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getPhotoCount\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(6);\n          this.incrementProgress(6);\n        }\n\n      });\n\n\n    // Updating Progress for Returns data\n    this.incrementProgress(7);\n\n    let returns = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(returns.cancelToken)\n\n    returns.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 7);\n        // Updating Progress for Returns data\n        this.incrementProgress(7);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getReturns\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(7);\n          this.incrementProgress(7);\n        }\n\n      });\n\n\n    // Updating Progress for Sold Items data\n    this.incrementProgress(8);\n\n    let sold = API.fakeApiCall(userInput)\n\n    // Saving cancel token\n    this.addCancelToken(sold.cancelToken)\n\n    await sold.axios\n      .then(res => {\n\n        // Calling to gather full data\n        // this.addLinkToLinksArray(res.data.content1, 8);\n        // Updating Progress for Sold Items data\n        this.incrementProgress(8);\n\n      })\n      .catch(err => {\n\n        // Catching cancellation\n        if (axios.isCancel(err)) {\n          // This is to notify next api calls to stop\n          cancelApiRequest = true;\n          console.log('Request canceled', err.message);\n        } else {\n          // handle error\n          console.log(\"getSoldItem\");\n          console.log(err);\n          // If error, increase progress outside of bounds\n          this.incrementProgress(8);\n          this.incrementProgress(8);\n        }\n\n      });\n\n    // Toggle Download Button as now we have all Reports to download\n    this.toggleHideDownloadButton();\n\n    // As the process has completed, trigger parent component that it has been finished\n    this.props.trigger()\n\n  }\n\n  // Helps in the process of updating state to reflect API call progress\n  incrementProgress = index => {\n    // Take an index of states and increase progress counter by one\n    this.setState((prevState) => {\n      // Using copy of prevState to use to manipulate without changing state directly\n      let newState = { ...prevState };\n      // Take previous progress count and increase by one\n      newState.dataSources[index].progress++;\n      // Updating State\n      return { newState };\n    })\n  }\n\n\n  // Self explanatory ;)\n  toggleHideDownloadButton = () => {\n\n    this.setState((prevState) => ({\n      hideDownloadButton: !prevState.hideDownloadButton\n    }))\n\n  }\n\n\n  addLinkToLinksArray = (link, i) => {\n    // This function is for updating the state variable links. This variable is used for manual downloading reports if necessary.\n    // The Array is null to begin with and will be updated as links come in\n\n    // Format full link for Download\n    let fullLink = `http://intentionally_removed/${link}`\n\n    // Copy state object to avoid mutating state directly\n    let stateUpdate = { ...this.state.dataSources }\n\n    // Updating state object with full link and filename\n    stateUpdate[i].link = fullLink\n    stateUpdate[i].fileName = link\n\n    this.setState({ datasources: stateUpdate })\n\n  }\n\n\n  addCancelToken = cancelToken => {\n\n    // Using prevState as this could be called in rapid succession due to systematic nature of API call sequence.\n    this.setState((prevState) => {\n\n      // Copy state array to avoid mutating state directly\n      let arr = [...prevState.cancelTokens]\n\n      // Add to array\n      arr.push(cancelToken)\n\n      // Update State\n      return {\n        cancelTokens: arr\n      }\n    })\n\n  }\n\n\n  fireAllCancels = () => {\n    // Loop through cancelTokens array and fire each cancellation\n    this.state.cancelTokens.forEach(token => {\n      // Message\n      token.cancel('Operation canceled by the user.')\n    })\n\n  }\n\n\n  render() {\n\n    return (\n      <DataCard\n        userID={this.props.title} // For testing\n        title={this.props.title}\n        index={this.props.index}\n        orace={this.props.oracle}\n        dataSources={this.state.dataSources}\n        hideDownloadButton={this.state.hideDownloadButton}\n      />\n    )\n  }\n}\n\nexport default DataGatherer","import React, { Component } from 'react'\nimport DataGatherer from \"../DataGatherer\"\n\n\nclass PullMultiple extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rawOracles: 'User1, User2, User3, User4, User5, User6',\n      unprocessedOracles: [\"User1\", \"User2\", \"User3\", \"User4\", \"User5\", \"User6\"],\n      processedOracles: [],\n      myGener: '',\n      disabledInput: false\n    }\n  }\n\n  componentWillMount() {\n    this.initiateGenerator()\n  }\n\n\n  initiateGenerator = () => {\n    this.setState({\n      myGener: this.myGen()\n    })\n  }\n\n\n  // Simple input handler, with a twist\n  handleInputChange = event => {\n\n    let { name, value } = event.target\n\n    // Only special thing here, splitting and cleaning inputs, see splitOracles()\n    let unprocessedOracles = this.splitOracles(value)\n\n    this.setState({\n      [name]: value,\n      unprocessedOracles\n    })\n\n  }\n\n\n  // 1. Split string of user inputs into array by comma's\n  // 2. Map Array and parse strings into Int's\n  // 3. Filter Array to remove null values\n  // splitOracles = val => val.split(\",\").map(ind => parseInt(ind)).filter(x => x)\n  splitOracles = val => val.split(\",\") // Demo\n\n  startCycle = () => {\n\n    // Catch case where go is hit when input is empty\n    if (!this.state.rawOracles) { return null }\n\n    // Trigger user input to disabled\n    this.toggleInputDisabled()\n    // Begin generator cycle\n    this.triggerGenerator()\n\n  }\n\n\n  myGen = function* () {\n\n    // Generator function in order to render one user ID at a time. \n    // When a user ID finishes processing it will trigger the next iteration\n    for (let i in this.state.unprocessedOracles) {\n      // Does not mutate state array directly\n      let unpro = [...this.state.unprocessedOracles]\n      let pro = [...this.state.processedOracles]\n      // Adds unprocessed ID to list to be processed\n      pro.push(unpro[i])\n      // Update state\n      this.setState({\n        processedOracles: pro\n      })\n      // Yields before beginning next loop\n      yield i\n    }\n\n  }\n\n\n  triggerGenerator = () => {\n\n    // Signalling the generator to continue cycling through array. Will be passed as prop to DataGatherer\n    this.state.myGener.next()\n\n  }\n\n  // Self explanatory\n  toggleInputDisabled = () => {\n    this.setState(prevState => ({\n      disabledInput: !prevState.disabledInput\n    }));\n  }\n\n\n  // This will be used to reset the app back to norm\n  clearComponentData = () => {\n\n    this.setState({\n      rawOracles: 'User1, User2, User3, User4, User5, User6',\n      unprocessedOracles: [\"User1\", \"User2\", \"User3\", \"User4\", \"User5\", \"User6\"],\n      processedOracles: [],\n      myGener: '',\n      disabledInput: false\n    },\n      // Using this as a callback to ensure state has been cleared\n      () => this.initiateGenerator()\n    )\n\n  }\n\n\n  render() {\n\n    return (\n      <div>\n\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <span className=\"navbar-brand mb-0 h1\">Business Readout Assistant</span>\n        </nav>\n\n        <div className=\"container\">\n\n          <div className='card'>\n\n            <div className=\"card-body\">\n\n              <h5 className=\"card-title\">Start Here</h5>\n\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n\n                  <textarea\n                    className=\"form-control\"\n                    rows=\"3\"\n                    name=\"rawOracles\"\n                    disabled={true} // Demo\n                    value={this.state.rawOracles}\n                    onChange={this.handleInputChange}\n                  />\n\n                  <br />\n\n                  <p className=\"card-text\">\n\n                    <button\n                      className=\"btn btn-primary\"\n                      disabled={this.state.disabledInput}\n                      onClick={this.startCycle}\n                    >\n                      Go!\n                    </button>\n\n                    <button\n                      className=\"btn btn-danger\"\n                      onClick={this.clearComponentData}\n                    >\n                      Reset\n                    </button>\n                  </p>\n\n                </div>\n\n                <div className=\"col-md-6\">\n\n                  <h5 className=\"card-title\">Demo Mode</h5>\n\n                  <p>This demo will demonstrate synchronous handling of multiple asynchronos API calls.</p>\n\n                </div>\n\n              </div>\n\n            </div>\n\n          </div>\n\n          <div className=\"row\">\n\n            {this.state.processedOracles.map((oracle, i) => (\n              <DataGatherer\n                key={i}\n                index={i}\n                title={oracle}\n                oracle={oracle}\n                trigger={this.triggerGenerator}\n              />\n            ))}\n\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n}\n\nexport default PullMultiple\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PullMultiple from './components/PullMultiple';\n\n\n// Simple Single Page App\nReactDOM.render(<PullMultiple />, document.getElementById('root'));\n"],"sourceRoot":""}